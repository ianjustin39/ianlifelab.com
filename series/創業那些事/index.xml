<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>創業那些事 on Your Life, Your Lab</title>
    <link>https://ianlifelab.com/series/%E5%89%B5%E6%A5%AD%E9%82%A3%E4%BA%9B%E4%BA%8B/</link>
    <description>Recent content in 創業那些事 on Your Life, Your Lab</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 14 May 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://ianlifelab.com/series/%E5%89%B5%E6%A5%AD%E9%82%A3%E4%BA%9B%E4%BA%8B/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Threads 沒有創新，為什麼還有那麼多用戶？</title>
      <link>https://ianlifelab.com/post/start-up/start-up/threads/</link>
      <pubDate>Wed, 14 May 2025 00:00:00 +0000</pubDate>
      
      <guid>https://ianlifelab.com/post/start-up/start-up/threads/</guid>
      <description> </description>
    </item>
    
    <item>
      <title>做產品不要害怕被用戶拒絕！</title>
      <link>https://ianlifelab.com/post/start-up/start-up/do-not-be-afraid-of-being-rejected-by-users/</link>
      <pubDate>Tue, 06 May 2025 00:00:00 +0000</pubDate>
      
      <guid>https://ianlifelab.com/post/start-up/start-up/do-not-be-afraid-of-being-rejected-by-users/</guid>
      <description>📝 當用戶說『我不需要你的產品』 剛開始開發產品時，為了可以獲得用戶反饋，所以想辦法找了許多使用者使用。以健身產業做例子，健身產業中有大型健身房、小型健身房、個人健身工作室以及自由教練等，每個群體的需求都不一樣，當時我定義了產品 TA 為自由教練，所以想盡辦法找了能找到的自由教練使用產品，並定期訪談這些教練的使用體驗，其中一個教練這樣跟我說：
『我所有學生的上課紀錄在 google 行事曆內，你的產品沒辦法讓我直接轉移 google 的資料，我要一個一個重新輸入太浪費時間。而且我也當教練十幾年了，會來找我訓練的學生基本上我都記得住他們的問題，不太需要再做紀錄，而且光訓練這些學生我的時間就被排滿了。所以基本上我不太需要你的產品』。（註：健身產業是舉例。）
聽完這段對話簡直晴天霹靂⚡，但我並沒有難過得太久，反而在思考整理過後知道了幾件事：
有十幾年經驗的健身教練並不是產品的 TA 有一套自己固定工作流程的人，要再導入新流程反而增加他們的負擔 『紀錄』這件事，對於比較早進入健身產業的教練來說並不是太重要 比起一直說『不錯呀』、『還行吧』的回應，我更喜歡直接點出問題的用戶。因為這可快速讓我知道原來這個功能甚至這個產品還有可以改進的地方，或是我們可以更聚焦於哪類的 TA。所以在這之後我再尋找用戶試用時，就會盡量撇除這幾種類型的用戶，讓我可以獲得更精準的用戶反饋。
📝 過濾需求而不是照單全收 用戶所提的任何需求都不一定是他真正需要的，甚至他根本不知道他想要哪些功能。產品很需要用戶給予反饋，但並非所有的需求都要接受。
你可以試試以下幾個面向來評估這個需求是Must, Should or Nice to have：（這邊先撇除 Bug 相關問題）
提出需求的用戶與產品的目標用戶是否一致？ 這個需求是否解決目標用戶的主要問題？或是可以提升目標用戶的使用體驗？ 產品自身有沒有類似的解決方案可以先使用？還是必須實作一個新的？ 完成這個需求需要花多少資源，是否會擠壓到本來預計安排的任務？ 若評估完這個用戶提出的需求必須擁有，沒有會影響到產品使用，那就安排時間整合；若判斷是應該需要，但目前有產品功能有替代方案，那就安排未來有資源時優先整合；若是有很好、沒有沒差的需求，可以等有資源有時間，或是做某項功能時可以用很低成本一起實作時再來考慮。
🤗 總結 用戶願意提出反饋，代表對於產品來說還是有些期待，對於產品來說是很好的事情。但同時也要過濾用戶提估的意見，才不會最後做出一堆看似符合用戶實際上卻沒解決問題的功能。</description>
    </item>
    
    <item>
      <title>做產品一定要創新嗎？</title>
      <link>https://ianlifelab.com/post/start-up/start-up/do-you-have-to-innovate/</link>
      <pubDate>Wed, 30 Apr 2025 00:00:00 +0000</pubDate>
      
      <guid>https://ianlifelab.com/post/start-up/start-up/do-you-have-to-innovate/</guid>
      <description>📝 這個產品有人做過了 有人說 Apple、Facebook、Instagram、Airbnb 等這些世界頂尖個科技公司是因為他們自己創造了新的需求、改變了人們的生活型態，造就了這些公司今天的成功！
回到我們所處的這個時代，要在製作產品上尋找『創新』我認為難度是比以前高很多，再加上就算找到了，也不一定有雄厚的資本可以與科技巨頭抗衡。但如果產品不創新，又會跟不上時代，那我們該怎麼辦？
這邊分享幾個故事給大家：
故事一：大家都在教投資？還有搞頭嗎？ 市場上的投資商品、課程非常的多，美股、台股、ETF、加密貨幣等等，多到你不知道要選哪一個，我也有一位朋友在投資領域創業，我簡單地與他聊了他對於這件事的想法
我問他：『你對於市場這麼多人在做投資教學有什麼想法嗎？』
他回我：『很好啊，越多人做代表需求跟機會都很大，也不用去教育市場，只要想辦法找到差異化的點就好了！』
故事二：這有人做過了，我還能做嗎？ 第二個故事則是跟交友軟體有關，前幾年市場上非常多交友 app 出現，我與一個做交友軟體創業的老闆聊到，如果他的產品某個功能或是產品題目有人做過了那怎麼辦？
『很好啊，代表市場已經被教育過了，不再需要花大量的成本教育市場，要做的就是找到現在還沒被解決的問題，或是整體流程做得比其他產品更好。』他這樣回我。
故事三：競爭對手這麼多，不創新有機會嗎？ 最後則是跟一位做桌遊遊戲的老闆聊到他的創業歷程以及同業這麼多會不會有惡性競爭的問題，他說『同業不一定是對手，有時反而是盟友。我們不一定要堅持創新，創新看大眾接不接受，還要教育消費者，這個成本太高了，這不是我們簡單可以做起來的。』
發現這些故事的哪些部分很雷同嗎？他們都認為**『人家做過沒關係，這些前輩已經幫忙驗證過市場了，我只要做出跟他們不同的地方就好了』**。
有沒有模仿最後超越的案例？ 還記得神魔之塔嗎？十幾年前日本推出當時創新的手機轉珠遊戲『龍族拼圖』，當時風靡日本，有些台灣的玩家得知這個訊息也跨區去下載，我朋友甚至貢獻了不少營收在這間公司上。但大部分台灣人聽到的轉珠遊戲是神魔之塔這個遊戲，甚至有人覺得是龍族拼圖抄襲了神魔之塔。雖然遊戲玩法一樣，但後期推出的功能卻漸漸有了差異，甚至有幾次更新讓龍族拼圖不得不『致敬』神魔之塔的功能。
🤗 總結 先驅者、創新者等創造全新的需求確實有機會讓產品大賣，甚至改變大家的生活，但在成功之前所需要付出的成本也高非常的多；反之後進者雖然較晚加入，但相對不需要負擔大量的前期探索成本，只需要將資源放在差異化或是尋找尚未被解決的問題即可。
如果你是一個軟體創業家、早期新創公司或是新產品線的產品經理，可以試著換個角度思考看看要做什麼產品這件事。</description>
    </item>
    
    <item>
      <title>用戶應該會這樣做？『我覺得』不一定是真的！</title>
      <link>https://ianlifelab.com/post/start-up/start-up/what-are-users-thinking/</link>
      <pubDate>Wed, 11 Dec 2024 00:00:00 +0000</pubDate>
      
      <guid>https://ianlifelab.com/post/start-up/start-up/what-are-users-thinking/</guid>
      <description>開始做 MeFresh 後，我踩了不少的坑，其中一個就是 UX 上的『我覺得』！
這是什麼意思？
舉個例，我覺得開一間店會需要先將『商品』、『服務時間』、『店家資訊』等事項都準備好後，才會開始攬客，但實際上美容師在使用一個軟體產品時卻不是這個樣子。
美容師的目的不是開店 下載 MeFresh 的美容師，通常都已經有自己的服務項目，且也已經有店面開始營業，所以這群美容師的目的不是開一家網路商店，而是找一個系統可以幫助他們運作工作室更順暢， 降低一些很瑣碎但又不得不做的事，比方說整理客人資料、處理客人預約等等。
這群用戶下載後通常第一件事會是去建立客人預約，早期的 MeFresh 會在畫面上顯示『請先優先新增服務項目』，我認為這個邏輯很正常， 店家要有服務項目才能給客人預約，所以當用戶沒有新增服務項目時我就跟會提醒他們完成新增後才可以繼續執行其他事， 但我忽略的是『用戶是想先用看看這個 app 有沒有符合他的需求』。
建立客人預約是 MeFresh 用戶的第一個也是最重要的需求，所以他希望先看這個功能有沒有符合他的期待，若有他才會繼續使用其他的功能，若沒有那他就會離開。 若在確認這個需求之前流程過於複雜，那用戶的耐心就會不斷地被消磨，最後就算他成功使用了建立預約的功能，但可能只要有一點小瑕疵他就會棄兒不用， 因為他已經經過長途跋涉才到這一步，對於瑕疵的接受度不在像一開始那麼高了，就算他小如沙粒他們可能也不會接受。
用最短路徑幫助用戶達成目的 現在我知道用戶最想做的事是『建立第一筆預約』，那我要如何用最短的路徑讓他體驗到這件事？當時我想了兩個方案：
在建立預約的畫面內加上新增服務的按鈕讓用戶直接使用。 當用戶建立完帳號後，直接建立預設的服務項目在帳號內。 其實選項並沒有優劣之分，只是看哪個比較符合當時的情境，以這個情境來說最終選擇了方案 2 作為解法。
為什麼？
剛剛有提到用戶最希望快速知道這個產品是否適合他使用，且基本需求為建立客人的預約，那我們就讓他可以 5~10 秒內就完成這件事， 排除所有可能造成耐心磨損的可能性，如：新增服務項目時需要理解每個欄位的用途等。 後續追蹤用戶從建立帳號到完成第一筆預約的比例也確實增加了不少，且願意繼續使用的用戶比例也一同上升，代表在這部分確實滿足了他們最初的目的。
至於方案 2 不好嗎？若情境為『用戶在建立一筆客人預約時，需要新增額外的服務項目』上那就是一個好的方案。
什麼意思？
比方說當美容師習得了新技能，要推出新服務時，可能只是與朋友或客人介紹，還沒新增服務到系統內，若客人表示有興趣想要預約下次的新服務， 那方案 2 就可以同時完成『新增預約＋新增服務』這兩件事，不用新增預約後想到沒新增服務，還要關閉跑到其他地方再回來，增加多餘的操作行為。
幫助用戶完成他們最想完成的事 一個產品一定會有許多不同的功能，傳統會設計一個『設定中心』將所有功能統一放到這邊讓用戶使用，但這種設計現在是否還能沿用呢？ 在做 MeFresh 這段時間我發現，用戶不一定知道他該做什麼設定，或是說他知道的很少，很高的機率是在遇到狀況的當下才會想到， 比方說剛剛提到的的新增服務項目以及建立第一筆預約。
所以在『對應的功能』安插『對應的設定』顯得格外重要，目的是希望用戶在不同的情境使用對應的功能時，不需要跑來跑去做額外的設定， 只需要待在同一頁，就可以做完當下該做的事，真正讓他感受到『這個系統 / 服務真的有讓他工作起來更輕鬆』的感覺。
舉個我認為比較貼切的例子，當在訂機票時，我們並不會先去會員中心設定護照資訊，而是在訂機票的過程中設定，試想若訂票時突然出現『請您先到會員中心登入護照資訊』， 那會不會整個都燥起來，甚至不想繼續在這個平台訂票呢！ 🤣</description>
    </item>
    
    <item>
      <title>你真的懂的『休息』嗎？假裝休息比不休息更糟糕！</title>
      <link>https://ianlifelab.com/post/start-up/start-up/do-you-really-understand-rest/</link>
      <pubDate>Sat, 23 Mar 2024 00:00:00 +0000</pubDate>
      
      <guid>https://ianlifelab.com/post/start-up/start-up/do-you-really-understand-rest/</guid>
      <description>你的休假日在幹嘛呢？與家人出遊但仍心繫著工作嗎？還是在擔心下週的產品發佈會有沒有意外？ 甚至在怕老闆是不是會臨時打給你呢？結果整個休假過完，什麼事都沒發生，但你卻沒有真正休息到。
如果你是個創業者，你甚至會覺得休息是奢侈的，無時無可都在思考怎麼打造產品、怎麼獲取用戶、怎麼拓展市場， 各種不確定性壓得你喘不過氣，甚至讓你有『上班真的比較舒服』的想法。
試著將時間『留白』 『留白』在現代設計來說是一個很重要的觀念，以往我們會希望『將我們想傳達的所有資訊放入有限的空間內』，但這也造就了一個問題， 畫面的的資訊過多，主要及次要資訊都擠在一起，沒辦法傳遞主要資訊給觀看者，大多數第一次看到內容的人，並不會知道這份設計主要想傳達什麼訊息， 過多的資訊對他們來說反而是雜訊，讓他們沒辦法找到真正核心訊息。適度的留白不只可以凸現設計想傳達的主要資訊， 同時也降低了過量資訊讓觀看者產生的壓力，提升了整體觀看體驗。
留白的概念不只出現在設計上，演講時也會使用同樣的概念，講者在演講過程中會適時地停頓，這就是留白的一種手段，在緊湊的演講中讓觀眾的精神有一絲喘息的機會， 同時講者也可以用這短暫的時間觀察台下聽眾的反應以及規劃接下來的節奏。
那時間需不需要留白呢？
試想過去我們把一整天的時間都『塞滿』，是否會覺得『我今天做了真多的事情』的感覺， 但你有沒有發現，滿載的狀態持續久了，有時可能導致你的精神狀況不好，在電腦前一整天就是沒有靈感、東西不斷刪刪改改， 看似花了一整天做了很多事，但這些產出卻不如預期？而更令人焦慮的是這種狀況居然還持好了好幾天。
時間的留白，就像設計或演講一樣，是給自己以及緊繃神經一個喘息的機會，並且觀察過去的工作狀態以及規劃接下來適合執行的步調。
人並沒有無限的精神力 你有過增肌的經驗嗎？為什麼健身教練總是說休息很重要，練得再多吃得再乾淨，沒有好好休息也沒辦法順利長肌肉？ 因為當你給肌肉過度刺激，它會需要時間去修復，給它充足的營養，但沒給它時間，肌肉也辦辦法長大，甚至可能因為過度操勞而受傷， 導致訓練計畫中斷。
精神也一樣，雖然它相較於肌肉比較抽象，但可以想想有沒有長時間連續加班，導致精神及身體變很糟的經驗發生？ 而在這個狀態下的效率明顯不好、出錯頻率也會上升，嚴重一點讓工作進度延後，甚至可能伴隨著一些情緒延伸出工作以外的問題。 這都是我們不希望發生的事，但當下確實也沒有更多的精神去處理好每件事，唯一能做的就空出時間是讓自己休息。
假裝休息反而適得其反 好吧！那我只要有休息就好了吧
只要安排一個假期或是出國旅遊一段時間應該可以就可以了吧？ 確實放假以及旅遊都可以讓我們的內心感到滿足，但如果在這段期間心中人不斷掛念著工作、時不時接到電話需要上線與老闆同事開會、協助處理同事的問題等， 等到假期結束回到工作崗位上反而還覺得『為啥我沒有休息到的感覺』，不只沒休息到，反而連假期都用掉，讓自己掉入一個懊悔的循環中。
更不用說創業者了，你認為你在休息，但卻有一搭沒一搭的處理公事，結果發現工作沒處理好，身體也沒休息到， 浪費了一堆時間後悔不已，讓你更不敢把時間花在休息上，導致狀況越來越差而造成負循環。
給自己一個完全休息的時間吧 完全休息不代表要出去旅遊或是放長假，他可以是一天、一個下午甚至一兩個小時。這段時間放下所有工作相關的事物，不管是手機還是電腦， 選擇一件你認為可以清空大腦、完全放鬆的事情，比方說散步、畫畫、擼貓等等，要知道這段時間並不浪費，他是在回復你的精神能量、重整你的大腦， 讓你可以用更好的狀態面對接下來的事情。</description>
    </item>
    
    <item>
      <title>新產品不適合跑 Scrum？</title>
      <link>https://ianlifelab.com/post/start-up/start-up/do-not-use-scrum-before-new-pd-launch/</link>
      <pubDate>Thu, 07 Dec 2023 00:00:00 +0000</pubDate>
      
      <guid>https://ianlifelab.com/post/start-up/start-up/do-not-use-scrum-before-new-pd-launch/</guid>
      <description>Scrum 算是現在軟體公司內最主流的協作框架，藉由 sprint 來切割產品每次更新的 scope ，讓產品可以不斷地與用戶互動，從而打造最貼近用戶及市場的產品。 但並不是所有的產品或是團隊都適合執行 Scrum 這個框架，甚至 Scrum 會阻礙開發的進度。
Scrum 的優勢在於小步快跑 Scrum 的優勢在於小步快跑，產品藉由每次的迭代更新，不斷地適應市場的改變與用戶的需求。 在執行 sprint 的過程中，會評估每個 task 所需要花的資源、每個 sprint 可以完成掉多少 task 以及定義每個 sprint 的 goals 等， 這些數據讓 PM 可以有效的管理產品的進度，同時也可以經由這些資訊與不同的部門合作，讓產品可以在市場上順利被推行。
新產品還沒上線之前不適合跑 Scrum？ 為什麼會說產品還沒上市前不適合跑 Scrum 呢？剛剛有提到，Scrum 講求小步快跑，藉由產品的快速迭代獲取更多用戶反饋，進而打造更貼近市場的產品。 重點來了！『產品的快速迭代』來獲取反饋，但產品還沒上線，怎麼來迭代獲取反饋呢？ 同時 Scrum 中的會議也會大量使用掉團隊的時間，在產品發布之前更應該把時間放在開發產品上，盡量避免耗時太久的會議。
在新產品上線之前，通常團隊或是 PM 會決定好新產品要有什麼功能，或是具備什麼條件，滿足這些需求推出市場才有意義。 所以在開發新產品時，團隊的目標並非迭代產品，而是完成可上線的產品，讓銷售部門可以順利的將產品推往市場。 這階段會更像是專案式的開發方式而非 Scrum。
專案式的開發方式，就像接案公司承接甲方的案件一樣，有明確的交付日期以及交付項目，這些資訊通常會跟著發佈計畫做調整； 同理，在公司內部開發新產品時，也會有一個發布計畫，預計新產品需要在何時發布、發布時需要囊括哪些功能、預期帶來什麼效應等等， 若錯過此時機，可能發布的效果就不會如預期般理想。
時效性的例子，我想以 Youtuber 是最好的範例，每年 Apple 新品發佈會，各大科技 YT 都會守在電腦前面，甚至有的被受邀出席 Apple 官方的實體發佈會， 在結束後分秒必爭的整理素材、剪輯後製、發布影片，為了就是要搭上發佈會後的這個黃金時段，因為這時流量最高，可能只要晚同業一兩天，流量就是天與地的差異。 產品的開發雖然沒有這麼極端，但邏輯卻非常相似。
這是否代表用專案式開發方式，要完全捨棄 Scrum 用取代呢？
新產品並非不適合 Scrum，而是看怎麼使用 其實並非新產品不適合 Scrum，而是不要拘泥於形式讓 Scrum 成了開發上的障礙，如開發不完就遞延，這可能會影響到產品上線的標準。</description>
    </item>
    
    <item>
      <title>矽谷推崇的新創思維 - 為何要產品需要 MVP？</title>
      <link>https://ianlifelab.com/post/start-up/start-up/why-need-mvp/</link>
      <pubDate>Tue, 05 Dec 2023 00:00:00 +0000</pubDate>
      
      <guid>https://ianlifelab.com/post/start-up/start-up/why-need-mvp/</guid>
      <description>MVP 是那個 MVP 嗎？ 在軟體產業中，MVP （最小可行性產品）這個詞大家應該不陌生，但在工作上卻不太容易去接觸到，因為在我們進入公司時， 大部分的公司都已經有一個穩定的產品，或是已經經過打磨驗證的產品，這讓我們要從如何去實踐 MVP 這套理論的機會也變得比較困難。 所以大家可能都有『產品最好先推出 MVP 』的概念，但卻很少有實際執行 MVP 的經驗。
產品推出 MVP 會帶給你什麼好處？ 一定要推 MVP 嗎？以前的產品也沒 MVP 照樣有人買單啊！
說到早期產品開發，通常會經歷開會討論需求、確認規格、執行開發、功能測試、產品發佈等階段，中間可能還會有需求變更的環節、溝通落差等還環節讓時間延遲， 前後加起來可能 12~18 個月甚至更久，但早期的產品仍能獲得了成功，為何現在不行呢？ 相比十年前，現今社會的變化速度太快，以前可能五年市場才會出現變化，現在可能一年甚至更短，市場或是人們的習慣就會被改變。
以一個遊戲為例，約莫十年前日本推出一款遊戲叫龍族拼圖，當時風靡遊戲市場一大段時間，還記得當時一隻 T1 角色可以稱霸遊戲半年一年沒問題， 但現在遊戲的選擇太多，遊戲商為了讓玩家花更多注意力在遊戲上，遊戲不斷推出新的挑戰刺激玩家，副本 Meta 不斷改變， 上個月人人搶著抽的 T1 的角色，這個月在 PTT 可能就出現『XX 是不是過氣』的類似留言。
產品市場也是，現在環境以及用戶的習慣變化的太快速，如果花一兩年的時間開發產品，可能產品已經沒辦法滿足現在客戶的需求了。 而經由 MVP 提早接觸市場，我認為對產品有以下三個好處：
1. 確認產品的方向 我想拍拍圈（PopChill）是個不錯的例子，當初拍拍圈的產品想要做社群電商，像是 IG 裡面內建電商的功能一樣， 推出之後發現這個題目似乎跟當初預期的效果不一樣，最終他們決定要把題目改為『精品二手拍賣』，現在的成果就非常的好。 試想要是拍拍圈產品做了一兩年都沒推出市場，花了大把資源卻發現選錯題目，到時改題目的成本會不會更高？
產品提早接觸市場，不但可以驗證產品是否有解決市場上的問題，也可評估產品的方向是否需要改變。
2. 確認產品功能是否真的被需要 做產品的人有時會掉入『我要打造最強產品』漩渦，而忽略了市場需求及聲音。 團隊可能從市場發現某些需求，或是經由訪談找到了用戶沒被滿足的痛點，讓產品有機會從這些點切入， 但這些都停留在『我們覺得用戶需要』的階段，但我們不知道的是，可能這些需求對於用戶來說不夠痛，他們有其他替代品可以使用， 有或是推出的產品雖然解決了問題，但因為設計不良讓用戶花更多的時間適應產品，以至於用戶們不買單。 推出 MVP 可以驗證我們的假設，同時團隊可以從先行使用的用戶中獲得的反饋去優化產品，讓產品可以更貼近用戶的需求，解決他們實務上的問題。
3. 確認產品 TA 是否與預期的相似 一開始在設計產品時，團隊一定會依照某些標準去 target 一些用戶為產品的 TA，試著以這些 TA 的輪廓來規劃產品的解決方案。 這跟第二點類似，這些 TA 是『我們認為的 TA』，實際上可能不是，比方說一個加密貨幣錢包商，認為所有接觸加密貨幣的人都是錢包的 TA， 但推出產品後發現，相比於錢包，專業交易員更喜歡使用交易所，不只是交易所提供豐富的衍生性金融商品，交易所在交易上對於交易員來說比錢包方便很多。 這時團隊就會了解要把交易員剔除在目標客戶之外，關於交易相關的功能優先度就變得不是那麼的高。</description>
    </item>
    
  </channel>
</rss>
