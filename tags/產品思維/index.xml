<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>產品思維 on Your Life, Your Lab</title>
    <link>https://ianlifelab.com/tags/%E7%94%A2%E5%93%81%E6%80%9D%E7%B6%AD/</link>
    <description>Recent content in 產品思維 on Your Life, Your Lab</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 06 May 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://ianlifelab.com/tags/%E7%94%A2%E5%93%81%E6%80%9D%E7%B6%AD/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>做產品不要害怕被用戶拒絕！</title>
      <link>https://ianlifelab.com/post/start-up/start-up/do-not-be-afraid-of-being-rejected-by-users/</link>
      <pubDate>Tue, 06 May 2025 00:00:00 +0000</pubDate>
      
      <guid>https://ianlifelab.com/post/start-up/start-up/do-not-be-afraid-of-being-rejected-by-users/</guid>
      <description>📝 當用戶說『我不需要你的產品』 剛開始開發產品時，為了可以獲得用戶反饋，所以想辦法找了許多使用者使用。以健身產業做例子，健身產業中有大型健身房、小型健身房、個人健身工作室以及自由教練等，每個群體的需求都不一樣，當時我定義了產品 TA 為自由教練，所以想盡辦法找了能找到的自由教練使用產品，並定期訪談這些教練的使用體驗，其中一個教練這樣跟我說：
『我所有學生的上課紀錄在 google 行事曆內，你的產品沒辦法讓我直接轉移 google 的資料，我要一個一個重新輸入太浪費時間。而且我也當教練十幾年了，會來找我訓練的學生基本上我都記得住他們的問題，不太需要再做紀錄，而且光訓練這些學生我的時間就被排滿了。所以基本上我不太需要你的產品』。（註：健身產業是舉例。）
聽完這段對話簡直晴天霹靂⚡，但我並沒有難過得太久，反而在思考整理過後知道了幾件事：
有十幾年經驗的健身教練並不是產品的 TA 有一套自己固定工作流程的人，要再導入新流程反而增加他們的負擔 『紀錄』這件事，對於比較早進入健身產業的教練來說並不是太重要 比起一直說『不錯呀』、『還行吧』的回應，我更喜歡直接點出問題的用戶。因為這可快速讓我知道原來這個功能甚至這個產品還有可以改進的地方，或是我們可以更聚焦於哪類的 TA。所以在這之後我再尋找用戶試用時，就會盡量撇除這幾種類型的用戶，讓我可以獲得更精準的用戶反饋。
📝 過濾需求而不是照單全收 用戶所提的任何需求都不一定是他真正需要的，甚至他根本不知道他想要哪些功能。產品很需要用戶給予反饋，但並非所有的需求都要接受。
你可以試試以下幾個面向來評估這個需求是Must, Should or Nice to have：（這邊先撇除 Bug 相關問題）
提出需求的用戶與產品的目標用戶是否一致？ 這個需求是否解決目標用戶的主要問題？或是可以提升目標用戶的使用體驗？ 產品自身有沒有類似的解決方案可以先使用？還是必須實作一個新的？ 完成這個需求需要花多少資源，是否會擠壓到本來預計安排的任務？ 若評估完這個用戶提出的需求必須擁有，沒有會影響到產品使用，那就安排時間整合；若判斷是應該需要，但目前有產品功能有替代方案，那就安排未來有資源時優先整合；若是有很好、沒有沒差的需求，可以等有資源有時間，或是做某項功能時可以用很低成本一起實作時再來考慮。
🤗 總結 用戶願意提出反饋，代表對於產品來說還是有些期待，對於產品來說是很好的事情。但同時也要過濾用戶提估的意見，才不會最後做出一堆看似符合用戶實際上卻沒解決問題的功能。</description>
    </item>
    
    <item>
      <title>用戶應該會這樣做？『我覺得』不一定是真的！</title>
      <link>https://ianlifelab.com/post/start-up/start-up/what-are-users-thinking/</link>
      <pubDate>Wed, 11 Dec 2024 00:00:00 +0000</pubDate>
      
      <guid>https://ianlifelab.com/post/start-up/start-up/what-are-users-thinking/</guid>
      <description>開始做 MeFresh 後，我踩了不少的坑，其中一個就是 UX 上的『我覺得』！
這是什麼意思？
舉個例，我覺得開一間店會需要先將『商品』、『服務時間』、『店家資訊』等事項都準備好後，才會開始攬客，但實際上美容師在使用一個軟體產品時卻不是這個樣子。
美容師的目的不是開店 下載 MeFresh 的美容師，通常都已經有自己的服務項目，且也已經有店面開始營業，所以這群美容師的目的不是開一家網路商店，而是找一個系統可以幫助他們運作工作室更順暢， 降低一些很瑣碎但又不得不做的事，比方說整理客人資料、處理客人預約等等。
這群用戶下載後通常第一件事會是去建立客人預約，早期的 MeFresh 會在畫面上顯示『請先優先新增服務項目』，我認為這個邏輯很正常， 店家要有服務項目才能給客人預約，所以當用戶沒有新增服務項目時我就跟會提醒他們完成新增後才可以繼續執行其他事， 但我忽略的是『用戶是想先用看看這個 app 有沒有符合他的需求』。
建立客人預約是 MeFresh 用戶的第一個也是最重要的需求，所以他希望先看這個功能有沒有符合他的期待，若有他才會繼續使用其他的功能，若沒有那他就會離開。 若在確認這個需求之前流程過於複雜，那用戶的耐心就會不斷地被消磨，最後就算他成功使用了建立預約的功能，但可能只要有一點小瑕疵他就會棄兒不用， 因為他已經經過長途跋涉才到這一步，對於瑕疵的接受度不在像一開始那麼高了，就算他小如沙粒他們可能也不會接受。
用最短路徑幫助用戶達成目的 現在我知道用戶最想做的事是『建立第一筆預約』，那我要如何用最短的路徑讓他體驗到這件事？當時我想了兩個方案：
在建立預約的畫面內加上新增服務的按鈕讓用戶直接使用。 當用戶建立完帳號後，直接建立預設的服務項目在帳號內。 其實選項並沒有優劣之分，只是看哪個比較符合當時的情境，以這個情境來說最終選擇了方案 2 作為解法。
為什麼？
剛剛有提到用戶最希望快速知道這個產品是否適合他使用，且基本需求為建立客人的預約，那我們就讓他可以 5~10 秒內就完成這件事， 排除所有可能造成耐心磨損的可能性，如：新增服務項目時需要理解每個欄位的用途等。 後續追蹤用戶從建立帳號到完成第一筆預約的比例也確實增加了不少，且願意繼續使用的用戶比例也一同上升，代表在這部分確實滿足了他們最初的目的。
至於方案 2 不好嗎？若情境為『用戶在建立一筆客人預約時，需要新增額外的服務項目』上那就是一個好的方案。
什麼意思？
比方說當美容師習得了新技能，要推出新服務時，可能只是與朋友或客人介紹，還沒新增服務到系統內，若客人表示有興趣想要預約下次的新服務， 那方案 2 就可以同時完成『新增預約＋新增服務』這兩件事，不用新增預約後想到沒新增服務，還要關閉跑到其他地方再回來，增加多餘的操作行為。
幫助用戶完成他們最想完成的事 一個產品一定會有許多不同的功能，傳統會設計一個『設定中心』將所有功能統一放到這邊讓用戶使用，但這種設計現在是否還能沿用呢？ 在做 MeFresh 這段時間我發現，用戶不一定知道他該做什麼設定，或是說他知道的很少，很高的機率是在遇到狀況的當下才會想到， 比方說剛剛提到的的新增服務項目以及建立第一筆預約。
所以在『對應的功能』安插『對應的設定』顯得格外重要，目的是希望用戶在不同的情境使用對應的功能時，不需要跑來跑去做額外的設定， 只需要待在同一頁，就可以做完當下該做的事，真正讓他感受到『這個系統 / 服務真的有讓他工作起來更輕鬆』的感覺。
舉個我認為比較貼切的例子，當在訂機票時，我們並不會先去會員中心設定護照資訊，而是在訂機票的過程中設定，試想若訂票時突然出現『請您先到會員中心登入護照資訊』， 那會不會整個都燥起來，甚至不想繼續在這個平台訂票呢！ 🤣</description>
    </item>
    
  </channel>
</rss>
